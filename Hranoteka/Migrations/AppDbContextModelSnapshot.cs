// <auto-generated />
using Hranoteka.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hranoteka.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hranoteka.Data.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "hrvatska"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "talijanska"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "američka"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "kineska"
                        },
                        new
                        {
                            CategoryId = 5,
                            Name = "ostalo"
                        });
                });

            modelBuilder.Entity("Hranoteka.Data.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            CommentId = 1,
                            Rating = 2,
                            RecipeId = 4,
                            Text = "jestivo",
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 2,
                            Rating = 3,
                            RecipeId = 3,
                            Text = "dobro",
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 3,
                            Rating = 4,
                            RecipeId = 2,
                            Text = "vrlo dobro",
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 4,
                            Rating = 5,
                            RecipeId = 1,
                            Text = "odlično",
                            UserId = 4
                        });
                });

            modelBuilder.Entity("Hranoteka.Data.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientId"));

                    b.Property<string>("Description")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            IngredientId = 1,
                            Description = "tijesto - 500 g",
                            RecipeId = 1
                        },
                        new
                        {
                            IngredientId = 2,
                            Description = "sir - 500 g",
                            RecipeId = 1
                        },
                        new
                        {
                            IngredientId = 3,
                            Description = "tijesto - 500 g",
                            RecipeId = 2
                        },
                        new
                        {
                            IngredientId = 4,
                            Description = "šunka - 150 g",
                            RecipeId = 2
                        },
                        new
                        {
                            IngredientId = 5,
                            Description = "pecivo - 100 g",
                            RecipeId = 3
                        },
                        new
                        {
                            IngredientId = 6,
                            Description = "pljeskavica - 150 g",
                            RecipeId = 3
                        },
                        new
                        {
                            IngredientId = 7,
                            Description = "patka - 2,5 kg",
                            RecipeId = 4
                        },
                        new
                        {
                            IngredientId = 8,
                            Description = "krumpir - 1 kg",
                            RecipeId = 4
                        });
                });

            modelBuilder.Entity("Hranoteka.Data.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"));

                    b.Property<string>("Alergens")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<decimal>("Kcal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RecipeImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            Alergens = "sir",
                            CategoryId = 1,
                            Description = "Speci",
                            Kcal = 1500m,
                            Name = "Štrukli",
                            Rating = 5m,
                            RecipeImagePath = "strukli.jpg",
                            UserId = 1
                        },
                        new
                        {
                            RecipeId = 2,
                            Alergens = "rajčica",
                            CategoryId = 2,
                            Description = "Razvuci",
                            Kcal = 1800m,
                            Name = "Pizza",
                            Rating = 4m,
                            RecipeImagePath = "pizza.jpg",
                            UserId = 2
                        },
                        new
                        {
                            RecipeId = 3,
                            Alergens = "sir",
                            CategoryId = 3,
                            Description = "Složi",
                            Kcal = 1000m,
                            Name = "Burger",
                            Rating = 3m,
                            RecipeImagePath = "burger.jpg",
                            UserId = 3
                        },
                        new
                        {
                            RecipeId = 4,
                            Alergens = "---",
                            CategoryId = 4,
                            Description = "Ulovi patku",
                            Kcal = 1200m,
                            Name = "Pekinška patka",
                            Rating = 2m,
                            RecipeImagePath = "pepa.jpg",
                            UserId = 4
                        });
                });

            modelBuilder.Entity("Hranoteka.Data.Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitId"));

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("UnitId");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            UnitId = 1,
                            Name = "g"
                        },
                        new
                        {
                            UnitId = 2,
                            Name = "dag"
                        },
                        new
                        {
                            UnitId = 3,
                            Name = "kg"
                        },
                        new
                        {
                            UnitId = 4,
                            Name = "ml"
                        },
                        new
                        {
                            UnitId = 5,
                            Name = "dl"
                        },
                        new
                        {
                            UnitId = 6,
                            Name = "lit"
                        },
                        new
                        {
                            UnitId = 7,
                            Name = "kom"
                        });
                });

            modelBuilder.Entity("Hranoteka.Data.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Country")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LastName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfileImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Username")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Country = "Hrvatska",
                            FirstName = "Fran",
                            LastName = "Vicić",
                            Password = "password",
                            ProfileImagePath = "fran.jpg",
                            Username = "fran"
                        },
                        new
                        {
                            UserId = 2,
                            Country = "Hrvatska",
                            FirstName = "Tin",
                            LastName = "Šoprun",
                            Password = "password",
                            ProfileImagePath = "tin.jpg",
                            Username = "tin"
                        },
                        new
                        {
                            UserId = 3,
                            Country = "Hrvatska",
                            FirstName = "Bruno",
                            LastName = "Bogdan",
                            Password = "password",
                            ProfileImagePath = "bruno.jpg",
                            Username = "bruno"
                        },
                        new
                        {
                            UserId = 4,
                            Country = "Hrvatska",
                            FirstName = "Dora",
                            LastName = "Sučić",
                            Password = "password",
                            ProfileImagePath = "dora.jpg",
                            Username = "dora"
                        });
                });

            modelBuilder.Entity("Hranoteka.Data.Comment", b =>
                {
                    b.HasOne("Hranoteka.Data.Recipe", "Recipe")
                        .WithMany("Comments")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hranoteka.Data.User", "Author")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Hranoteka.Data.Ingredient", b =>
                {
                    b.HasOne("Hranoteka.Data.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Hranoteka.Data.Recipe", b =>
                {
                    b.HasOne("Hranoteka.Data.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hranoteka.Data.User", "Author")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Hranoteka.Data.Recipe", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
